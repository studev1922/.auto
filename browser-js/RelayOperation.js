let m = {
    dataScript() { return Array.from(document.body.querySelectorAll("script")).map(r => { try { return JSON.parse(r.innerText) } catch (t) { return null } }).filter(Boolean) },
    shortcuts(e, t) { let f = []; return !function e(n) { if ("object" == typeof n && null !== n) { if (Array.isArray(n)) for (let i of n) e(i); else for (let l in t in n && f.push(n[t]), n) e(n[l]) } }(e), f },
    allSrc: (t = [".js"], r = !1) => { let e = [...m.shortcuts(m.dataScript(), "src"), ...m.shortcuts(m.dataScript(), "url")], s = Array.from(new Set(e)); return s.filter(e => "string" == typeof e && t[r ? "every" : "some"](t => e.includes(t))) },
    async _extractRelayOperationData(){let e=[...new Set(m.allSrc([".js"]))],t=await Promise.all(e.map(e=>fetch(e).then(e=>e.ok?e.text():"")));return{doc_ids:(()=>{let e=/__d\("([^"]+)",\[\],\(function\(.+?\)\{e\.exports="([^"]+)"\}\)/g,l={};for(let r of t){let a;for(;null!==(a=e.exec(r));)l[a[1]]=a[2]}return Object.fromEntries(Object.entries(l).sort(([e],[t])=>e.localeCompare(t)))})(),providedVariables:(()=>{let e=/params:\s*\{[^}]*?id:\s*\w+\("([^"]+)"\)[\s\S]+?providedVariables:\s*\{([\s\S]+?)\}\s*\}/g,l=/([a-zA-Z0-9_]+)\s*:\s*\w+\("([^"]+)"\)/g,r={};for(let a of t){let o;for(;null!==(o=e.exec(a));){let s=o[1],n=o[2],c={},i;for(;null!==(i=l.exec(n));){let[f,u,d]=i;try{c[u]=require(d).get()}catch{c[u]=null}}r[s]=c}}return r})()}}
}
return await m._extractRelayOperationData()