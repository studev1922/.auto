let m = {
    dataScript() { return Array.from(document.body.querySelectorAll("script")).map(r => { try { return JSON.parse(r.innerText) } catch (t) { return null } }).filter(Boolean) },
    shortcuts(e, t) { let f = []; return !function e(n) { if ("object" == typeof n && null !== n) { if (Array.isArray(n)) for (let i of n) e(i); else for (let l in t in n && f.push(n[t]), n) e(n[l]) } }(e), f },
    allSrc:(t=[".js"],r=!1)=>{let e=[...m.shortcuts(m.dataScript(),"src"),...m.shortcuts(m.dataScript(),"url")],s=Array.from(new Set(e));return s.filter(e=>"string"==typeof e&&t[r?"every":"some"](t=>e.includes(t)))},
    async _extractRelayOperationData(){let e=await Promise.all([...new Set(m.allSrc([".js"]))].map(e=>fetch(e).then(e=>e.ok?e.text():""))),t=(()=>{let t=/__d\("([^"]+)",\[\],\(function\(.+?\)\{e\.exports="([^"]+)"\}\)/g,l={};for(let r of e){let a;for(;null!==(a=t.exec(r));)l[a[1]]=a[2]}return Object.fromEntries(Object.entries(l).sort(([e],[t])=>e.localeCompare(t)))})(),l=(()=>{let t=/params:\s*\{[^}]*?id:\s*b\("([^"]+)"\)[\s\S]+?providedVariables:\s*\{([\s\S]+?)\}\s*\}/g,l=/([a-zA-Z0-9_]+)\s*:\s*b\("([^"]+)"\)/g,r={};for(let a of e){let n;for(;null!==(n=t.exec(a));){let o=n[1],s=n[2],c={},f;for(;null!==(f=l.exec(s));)try{c[f[1]]=require(f[2]).get()}catch{c[f[1]]=null}r[o]=c}}return r})();return{doc_ids:t,providedVariables:l}}
}
return await m._extractRelayOperationData()